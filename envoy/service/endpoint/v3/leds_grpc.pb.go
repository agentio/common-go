// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: envoy/service/endpoint/v3/leds.proto

package endpointv3

import (
	context "context"
	v3 "github.com/agentio/common-go/envoy/service/discovery/v3"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	LocalityEndpointDiscoveryService_DeltaLocalityEndpoints_FullMethodName = "/envoy.service.endpoint.v3.LocalityEndpointDiscoveryService/DeltaLocalityEndpoints"
)

// LocalityEndpointDiscoveryServiceClient is the client API for LocalityEndpointDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LocalityEndpointDiscoveryServiceClient interface {
	// The resource_names_subscribe resource_names_unsubscribe fields in DeltaDiscoveryRequest
	// specify a list of glob collections to subscribe to updates for.
	DeltaLocalityEndpoints(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse], error)
}

type localityEndpointDiscoveryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLocalityEndpointDiscoveryServiceClient(cc grpc.ClientConnInterface) LocalityEndpointDiscoveryServiceClient {
	return &localityEndpointDiscoveryServiceClient{cc}
}

func (c *localityEndpointDiscoveryServiceClient) DeltaLocalityEndpoints(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &LocalityEndpointDiscoveryService_ServiceDesc.Streams[0], LocalityEndpointDiscoveryService_DeltaLocalityEndpoints_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]{ClientStream: stream}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LocalityEndpointDiscoveryService_DeltaLocalityEndpointsClient = grpc.BidiStreamingClient[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]

// LocalityEndpointDiscoveryServiceServer is the server API for LocalityEndpointDiscoveryService service.
// All implementations must embed UnimplementedLocalityEndpointDiscoveryServiceServer
// for forward compatibility.
type LocalityEndpointDiscoveryServiceServer interface {
	// The resource_names_subscribe resource_names_unsubscribe fields in DeltaDiscoveryRequest
	// specify a list of glob collections to subscribe to updates for.
	DeltaLocalityEndpoints(grpc.BidiStreamingServer[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]) error
	mustEmbedUnimplementedLocalityEndpointDiscoveryServiceServer()
}

// UnimplementedLocalityEndpointDiscoveryServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedLocalityEndpointDiscoveryServiceServer struct{}

func (UnimplementedLocalityEndpointDiscoveryServiceServer) DeltaLocalityEndpoints(grpc.BidiStreamingServer[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]) error {
	return status.Errorf(codes.Unimplemented, "method DeltaLocalityEndpoints not implemented")
}
func (UnimplementedLocalityEndpointDiscoveryServiceServer) mustEmbedUnimplementedLocalityEndpointDiscoveryServiceServer() {
}
func (UnimplementedLocalityEndpointDiscoveryServiceServer) testEmbeddedByValue() {}

// UnsafeLocalityEndpointDiscoveryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LocalityEndpointDiscoveryServiceServer will
// result in compilation errors.
type UnsafeLocalityEndpointDiscoveryServiceServer interface {
	mustEmbedUnimplementedLocalityEndpointDiscoveryServiceServer()
}

func RegisterLocalityEndpointDiscoveryServiceServer(s grpc.ServiceRegistrar, srv LocalityEndpointDiscoveryServiceServer) {
	// If the following call pancis, it indicates UnimplementedLocalityEndpointDiscoveryServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&LocalityEndpointDiscoveryService_ServiceDesc, srv)
}

func _LocalityEndpointDiscoveryService_DeltaLocalityEndpoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LocalityEndpointDiscoveryServiceServer).DeltaLocalityEndpoints(&grpc.GenericServerStream[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LocalityEndpointDiscoveryService_DeltaLocalityEndpointsServer = grpc.BidiStreamingServer[v3.DeltaDiscoveryRequest, v3.DeltaDiscoveryResponse]

// LocalityEndpointDiscoveryService_ServiceDesc is the grpc.ServiceDesc for LocalityEndpointDiscoveryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LocalityEndpointDiscoveryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.service.endpoint.v3.LocalityEndpointDiscoveryService",
	HandlerType: (*LocalityEndpointDiscoveryServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeltaLocalityEndpoints",
			Handler:       _LocalityEndpointDiscoveryService_DeltaLocalityEndpoints_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "envoy/service/endpoint/v3/leds.proto",
}
